{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\权益\\demo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\权益\\demo\\node_modules\\webpack-dev-server\\client\\socket.js","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\权益\\demo\\node_modules\\webpack-dev-server\\client\\socket.js","mtime":1607394579539},{"path":"C:\\Users\\Administrator\\Desktop\\权益\\demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1607394529649},{"path":"C:\\Users\\Administrator\\Desktop\\权益\\demo\\node_modules\\babel-loader\\lib\\index.js","mtime":1607394629632}],"contextDependencies":[],"result":["'use strict';\n/* global __webpack_dev_server_client__ */\n\n/* eslint-disable\n  camelcase\n*/\n\nvar Client = __webpack_dev_server_client__;\nvar retries = 0;\nvar client = null;\n\nvar socket = function initSocket(url, handlers) {\n  client = new Client(url);\n  client.onOpen(function () {\n    retries = 0;\n  });\n  client.onClose(function () {\n    if (retries === 0) {\n      handlers.close();\n    } // Try to reconnect.\n\n\n    client = null; // After 10 retries stop trying, to prevent logspam.\n\n    if (retries <= 10) {\n      // Exponentially increase timeout to reconnect.\n      // Respectfully copied from the package `got`.\n      // eslint-disable-next-line no-mixed-operators, no-restricted-properties\n      var retryInMs = 1000 * Math.pow(2, retries) + Math.random() * 100;\n      retries += 1;\n      setTimeout(function () {\n        socket(url, handlers);\n      }, retryInMs);\n    }\n  });\n  client.onMessage(function (data) {\n    var msg = JSON.parse(data);\n\n    if (handlers[msg.type]) {\n      handlers[msg.type](msg.data);\n    }\n  });\n};\n\nmodule.exports = socket;",{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\权益\\demo\\node_modules\\webpack-dev-server\\client\\socket.js"],"names":["Client","__webpack_dev_server_client__","retries","client","socket","initSocket","url","handlers","onOpen","onClose","close","retryInMs","Math","pow","random","setTimeout","onMessage","data","msg","JSON","parse","type","module","exports"],"mappings":"AAAA;AACA;;AAEA;;;;AAIA,IAAIA,MAAM,GAAGC,6BAAb;AACA,IAAIC,OAAO,GAAG,CAAd;AACA,IAAIC,MAAM,GAAG,IAAb;;AAEA,IAAIC,MAAM,GAAG,SAASC,UAAT,CAAoBC,GAApB,EAAyBC,QAAzB,EAAmC;AAC9CJ,EAAAA,MAAM,GAAG,IAAIH,MAAJ,CAAWM,GAAX,CAAT;AACAH,EAAAA,MAAM,CAACK,MAAP,CAAc,YAAY;AACxBN,IAAAA,OAAO,GAAG,CAAV;AACD,GAFD;AAGAC,EAAAA,MAAM,CAACM,OAAP,CAAe,YAAY;AACzB,QAAIP,OAAO,KAAK,CAAhB,EAAmB;AACjBK,MAAAA,QAAQ,CAACG,KAAT;AACD,KAHwB,CAGvB;;;AAGFP,IAAAA,MAAM,GAAG,IAAT,CANyB,CAMV;;AAEf,QAAID,OAAO,IAAI,EAAf,EAAmB;AACjB;AACA;AACA;AACA,UAAIS,SAAS,GAAG,OAAOC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYX,OAAZ,CAAP,GAA8BU,IAAI,CAACE,MAAL,KAAgB,GAA9D;AACAZ,MAAAA,OAAO,IAAI,CAAX;AACAa,MAAAA,UAAU,CAAC,YAAY;AACrBX,QAAAA,MAAM,CAACE,GAAD,EAAMC,QAAN,CAAN;AACD,OAFS,EAEPI,SAFO,CAAV;AAGD;AACF,GAlBD;AAmBAR,EAAAA,MAAM,CAACa,SAAP,CAAiB,UAAUC,IAAV,EAAgB;AAC/B,QAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAV;;AAEA,QAAIV,QAAQ,CAACW,GAAG,CAACG,IAAL,CAAZ,EAAwB;AACtBd,MAAAA,QAAQ,CAACW,GAAG,CAACG,IAAL,CAAR,CAAmBH,GAAG,CAACD,IAAvB;AACD;AACF,GAND;AAOD,CA/BD;;AAiCAK,MAAM,CAACC,OAAP,GAAiBnB,MAAjB","sourcesContent":["'use strict';\n/* global __webpack_dev_server_client__ */\n\n/* eslint-disable\n  camelcase\n*/\n\nvar Client = __webpack_dev_server_client__;\nvar retries = 0;\nvar client = null;\n\nvar socket = function initSocket(url, handlers) {\n  client = new Client(url);\n  client.onOpen(function () {\n    retries = 0;\n  });\n  client.onClose(function () {\n    if (retries === 0) {\n      handlers.close();\n    } // Try to reconnect.\n\n\n    client = null; // After 10 retries stop trying, to prevent logspam.\n\n    if (retries <= 10) {\n      // Exponentially increase timeout to reconnect.\n      // Respectfully copied from the package `got`.\n      // eslint-disable-next-line no-mixed-operators, no-restricted-properties\n      var retryInMs = 1000 * Math.pow(2, retries) + Math.random() * 100;\n      retries += 1;\n      setTimeout(function () {\n        socket(url, handlers);\n      }, retryInMs);\n    }\n  });\n  client.onMessage(function (data) {\n    var msg = JSON.parse(data);\n\n    if (handlers[msg.type]) {\n      handlers[msg.type](msg.data);\n    }\n  });\n};\n\nmodule.exports = socket;"]}]}